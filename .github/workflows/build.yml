name: Build

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.23

    - name: Check out code
      uses: actions/checkout@v2

    - name: Go Mod Tidy
      run: go mod tidy

    - name: Test
      run: go test -v ./...

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          - goos: windows
            goarch: amd64
            ext: .exe

    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.23

    - name: Check out code
      uses: actions/checkout@v2

    - name: Set version information
      id: version
      run: |
        echo "::set-output name=version::$(git describe --tags --always || echo 'dev')"
        echo "::set-output name=date::$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
        echo "::set-output name=commit::$(git rev-parse HEAD || echo 'unknown')"

    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        go build -ldflags "-X main.Version=${{ steps.version.outputs.version }} -X main.BuildDate=${{ steps.version.outputs.date }} -X main.Commit=${{ steps.version.outputs.commit }}" -o radar-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }} ./cmd/radar

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: radar-${{ matrix.goos }}-${{ matrix.goarch }}
        path: radar-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}

  release:
    name: Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Download all artifacts
      uses: actions/download-artifact@v2

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: RADAR ${{ github.ref_name }}
        draft: false
        prerelease: false
        body: |
          RADAR (Recognition and DNS Analysis for Resource detection) ${{ github.ref_name }}
          
          ## What's New
          
          * See the [CHANGELOG.md](https://github.com/Elite-Security-Systems/radar/blob/main/CHANGELOG.md) for details.

    - name: Upload Linux AMD64 Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./radar-linux-amd64/radar-linux-amd64
        asset_name: radar-linux-amd64
        asset_content_type: application/octet-stream

    - name: Upload Linux ARM64 Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./radar-linux-arm64/radar-linux-arm64
        asset_name: radar-linux-arm64
        asset_content_type: application/octet-stream

    - name: Upload macOS AMD64 Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./radar-darwin-amd64/radar-darwin-amd64
        asset_name: radar-darwin-amd64
        asset_content_type: application/octet-stream

    - name: Upload macOS ARM64 Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./radar-darwin-arm64/radar-darwin-arm64
        asset_name: radar-darwin-arm64
        asset_content_type: application/octet-stream

    - name: Upload Windows AMD64 Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./radar-windows-amd64/radar-windows-amd64.exe
        asset_name: radar-windows-amd64.exe
        asset_content_type: application/octet-stream
